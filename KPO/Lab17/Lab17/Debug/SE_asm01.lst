Microsoft (R) Macro Assembler Version 14.29.30133.0	    10/31/22 19:09:12
SE_asm01.asm						     Page 1 - 1


				.586P
				.MODEL FLAT, STDCALL
				includelib kernel32.lib
				
				ExitProcess PROTO : DWORD
				MessageBoxA PROTO : DWORD, : DWORD, : DWORD, : DWORD
				
				.STACK 4096
				
 00000000			.CONST 
				
 00000000 00000003		Arr sdword 3, 2, 6, 8, 
	   00000002
	   00000006
	   00000008
				
 00000000			.DATA
				
 00000000 4C 61 62 5F 31	str1 DB "Lab_17", 0
	   37 00
 00000007 4D 69 6E 20 3D	str2 DB "Min =   ; Max =   ", 0
	   20 20 20 3B 20
	   4D 61 78 20 3D
	   20 20 20 00
				
 = 00000000			MB_OK EQU 0	
 0000001A 00000000		HW DWORD ?
				
 0000001E 00000000		min sdword ?
 00000022 00000000		max sdword ?
				
 00000000			.CODE
				
 00000000			main PROC
 00000000			START:
				
				; - - - - - - - - - - - - - -  Test getMin - - - - - - - - - - - -
				
 00000000  6A 04		push lengthof Arr
 00000002  68 00000000 R	push offset Arr
				
 00000007  E8 0000004E		call getMin
 0000000C  A3 0000001E R	mov min, eax
				
				; - - - - - - - - - - - - - -  Test getMax - - - - - - - - - - - -
 00000011  6A 04		push lengthof Arr
 00000013  68 00000000 R	push offset Arr
 00000018  E8 0000005E		call getmax
 0000001D  A3 00000022 R	mov max, eax
				
				; - - - - - - - - - - - - - -  Write Result - - - - - - - - - - -
 00000022  A1 0000001E R	    mov eax, min;
 00000027  83 C0 30			add eax, 30h;
 0000002A  A2 0000000D R		mov str2 + 6, al;
					
 0000002F  A1 00000022 R		mov eax, max;
 00000034  83 C0 30			add eax, 30h;
 00000037  A2 00000017 R		mov str2 + 16, al;
				    INVOKE MessageBoxA, HW, offset str2,offset str1, 0
				
 00000053  6A 00		push 0
 00000055  E8 00000000 E	call ExitProcess
 0000005A			main ENDP
				
				; - - - - - - - - - - - - - -  procedure getMin - - - - - - - - - 
				
 0000005A			getMin PROC uses ecx esi ebx, parm01: dword, parm02: dword
				
 00000060  8B 4D 0C		      mov   ecx, parm02
 00000063  8B 75 08		      mov   esi, parm01
 00000066  8B 06		      mov   eax, [esi]
				
 00000068			CYCLE: 
				
 00000068  8B 1E		      mov   ebx, [esi]
 0000006A  83 C6 04		      add   esi, 4
 0000006D  3B C3		      cmp   eax, ebx
 0000006F  7C 01		      jl    False
 00000071  93			      xchg  eax, ebx
				
 00000072			False: 
				
 00000072  E2 F4		      loop  CYCLE
				
					  ret
				
 0000007B			getMin ENDP
				
				; - - - - - - - - - - - - - -  procedure getMax - - - - - - - - - 
				
 0000007B			getMax PROC uses ecx esi ebx, parm01: dword, parm02: dword
				
 00000081  8B 4D 0C		      mov   ecx, parm02
 00000084  8B 75 08		      mov   esi, parm01
 00000087  8B 06		      mov   eax, [esi]
				
 00000089			CYCLE: 
				
 00000089  8B 1E		      mov   ebx, [esi]
 0000008B  83 C6 04		      add   esi, 4
 0000008E  3B C3		      cmp   eax, ebx
 00000090  7F 01		      jg    False
 00000092  93			      xchg  eax, ebx
				
 00000093			False: 
				
 00000093  E2 F4		      loop  CYCLE
				
					  ret
				
 0000009C			getMax ENDP
				
				END main
Microsoft (R) Macro Assembler Version 14.29.30133.0	    10/31/22 19:09:12
SE_asm01.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000010 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000026 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000009C Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
getMax . . . . . . . . . . . . .	P Near	 0000007B _TEXT	Length= 00000021 Public STDCALL
  parm01 . . . . . . . . . . . .	DWord	 bp + 00000008
  parm02 . . . . . . . . . . . .	DWord	 bp + 0000000C
  CYCLE  . . . . . . . . . . . .	L Near	 00000089 _TEXT	
  False  . . . . . . . . . . . .	L Near	 00000093 _TEXT	
getMin . . . . . . . . . . . . .	P Near	 0000005A _TEXT	Length= 00000021 Public STDCALL
  parm01 . . . . . . . . . . . .	DWord	 bp + 00000008
  parm02 . . . . . . . . . . . .	DWord	 bp + 0000000C
  CYCLE  . . . . . . . . . . . .	L Near	 00000068 _TEXT	
  False  . . . . . . . . . . . .	L Near	 00000072 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000005A Public STDCALL
  START  . . . . . . . . . . . .	L Near	 00000000 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Arr  . . . . . . . . . . . . . .	DWord	 00000000 CONST	
HW . . . . . . . . . . . . . . .	DWord	 0000001A _DATA	
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
max  . . . . . . . . . . . . . .	DWord	 00000022 _DATA	
min  . . . . . . . . . . . . . .	DWord	 0000001E _DATA	
str1 . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
str2 . . . . . . . . . . . . . .	Byte	 00000007 _DATA	

	   0 Warnings
	   0 Errors
